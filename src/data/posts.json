[{"title":"Hello, World!","url":"hello-world","date":"2021/7/23","category":"기타","thumbnail":"/static/images/img-hello-world.PNG","content":"r.ehdals 부터 rkdlog 까지\r\n\r\n## 👋 안녕하세요.\r\n\r\n프론트엔드를 좋아하는 학생입니다. 😁\r\n\r\n### 🤔 개발 동기\r\n\r\n저는 원래 [r.ehdals](https://rehdals.netlify.app)에서 블로그활동을 했습니다. 댓글도 없었고, 조회수 기능도 없는 완전 프론트엔드 그자체인 사이트였습니다.  \r\n어느날 백엔드 서버를 만들어 [r.ehdals](https://rehdals.netlify.app)와 연결할려고 했는데 `React`에 대한 지식도 부족하고 처음 만든 저만의 블로그라 뼈대가 버티질 못했습니다.  \r\n그러다가 `Svelte`라는 언어를 처음 접하게 되었는데, 막상 배워보니 `React` 보다 쉽고 예전보다는 코드를 짜는 능력이 발전을 해서 공부 겸 `Svelte`라는 언어로 새로 만들게 되었습니다.\r\n\r\n## 📦 사용한 모듈\r\n\r\n### Frontend\r\n\r\n`Svelte`, `vitejs` 그리고 `Typescript`를 이용하여 제작하였습니다.\r\n\r\n### Backend\r\n\r\n`express`를 통해 개발하였습니다. database는 `firebase`를 사용하였습니다.  \r\ndatabase는 처음 접한거라 조금 어려웠지만 재미있는 경험이였습니다.\r\n\r\n## 🎠 앞으로의 계획\r\n\r\n아직은 조회수, 댓글 기능밖에 없지만 추후 소셜 로그인으로 계정을 생성할 수 있게 업데이트할 예정입니다.\r\n\r\n### 💬 이전 블로그\r\n\r\n이전 블로그는 더이상 사용하지 않을 예정입니다.  \r\n혹시 이전 포스트를 보고싶으신 분들은 [이곳을](https://rehdals.netlify.app) 방문하시면 됩니다.\r\n\r\n## ❗ 버그\r\n\r\n혹시 버그를 발견했다면 댓글 또는 [Github](https://github.com/kangdongmandoo/r.ehdalsblog)를 통해 알려주시면 감사하겠습니다.\r\n"},{"title":"vitejs + svelte","url":"vite-svelte","date":"2021/7/24","category":"svelte","thumbnail":"/static/images/img-vite-js.png","content":"오늘은 요즘 핫한 번들러 Vitejs를 이용해서 Svelte 프로젝트를 생성해보도록 하겠습니다.\r\n\r\n## Svelte, Vite?\r\n\r\nSvelte랑 Vite가 뭘까요?\r\n\r\n### 🤔 Vite?\r\n\r\n[Vite](https://github.com/vitejs/vite)는 프랑스어로 \"빠른\"라는 뜻을 가지고 있습니다. 말그대로 Vite는 정말 빠른 핫 모듈 리로드를 제공합니다. [Dev.to](https://dev.to/alvarosaburido/vite-2-a-speed-comparison-in-vue-1f5j)에 속도를 비교해주신 분이 있으니 참고하시면 되겠습니다.  \r\n원래 vite는 vue를 위해 만들어졌지만 플러그인을 통해 svelte, react도 가능해졌다고 하죠.\r\n\r\n### 🧐 그래서 Svelte는?\r\n\r\n그래서 Svelte가 뭘까요?\r\n\r\n[홈페이지](https://svelte.dev/)를 잠시 둘러보니 대충\r\n\r\n> Svelte는 React와 Vue와 같은 기존 프레임워크와 달리 앱을 빌드할 때 발생하는 **\"컴파일\"** 단계에서 작업을 수행한다. 코드를 프레임워크가 없는 바닐라 자바스크립트로 컴파일해 앱을 빠르게 시작하고 유지할 수 있다.\r\n\r\n라고 하네요. (오역이 있을 수 있습니다)\r\n\r\n![img](./static/images/img-svelte-npm-download.PNG)\r\n\r\n> Svelte Npm 위클리 다운로드 수 입니다. Svelte가 점점 유명세를 타고있다는것을 알 수 있습니다.\r\n\r\n## 🚀 프로젝트 생성\r\n\r\n이제 vite 앱을 생성해봅시다.\r\n\r\n```bash\r\n$yarn create vite\r\n```\r\n\r\n첫 번째로 프로젝트 이름을 물어보는데 원하는 이름으로 해주시면 됩니다.\r\n\r\n![img](./static/images/img-vite-svelte-1.PNG)\r\n\r\n다음으로 프레임워크를 물어보는데 여기서 **svelte**를 선택해주시면 됩니다.\r\n\r\n![img](./static/images/img-vite-svelte-2.PNG)\r\n\r\n이건 typescript를 사용하길 원하면 `svelte-ts`를, 원치 않으면 `svelte`를 선택해주시면 됩니다.\r\n\r\n프로젝트 생성이 완료되었다고 뜨면 아래 명령어를 입력해주세요.\r\n\r\n```bash\r\n$cd {프로젝트 이름}\r\n$yarn # npm install\r\n$yarn dev # npm run dev\r\n```\r\n\r\n이제 localhost:{포트}로 들어가면..\r\n\r\n![img](./static/images/img-vite-svelte-3.PNG)\r\n\r\n잘 작동하네요!\r\n\r\n## 📜 마무리\r\n\r\n이번 포스트에서는 vite + svelte 조합을 알아보았습니다.  \r\n궁금하신 점이나 오타는 댓글로 알려주시면 감사하겠습니다.\r\n"},{"title":"만들면서 svelte 배우기 (1)","url":"learn-svelte-1","date":"2021/7/31","category":"svelte","thumbnail":"/static/images/img-svelte-logo-center.png","content":"안녕하세요. 이번에는 Svelte를 이용하여 간단하게 물건 판매 페이지 제작하며 Svelte를 배워보도록 합시다.\r\n\r\n## 📜 시작하기 전\r\n\r\nJS 기본문법 (es6)과 Typescript를 익히고 보시면 좋습니다.  \r\n인터넷에 널린게 JS,TS 강좌니 아직 모르시는 분들은 익히고 와주시면 감사하겠습니다.\r\n\r\n## 🤖 프로젝트 생성\r\n\r\n먼저 `vite`를 이용해 프로젝트를 제작하겠습니다.  \r\n자세한 `vite` 프로젝트 생성 방법은 [이곳을](/#/link/1) 참고해주세요.\r\n\r\n```bash\r\n$ yarn create vite # svelte, typescript를 선택해주세요.\r\n$ cd {Project Name}\r\n$ yarn\r\n$ yarn dev\r\n```\r\n\r\n## 🎠 프로젝트 생성\r\n\r\n먼저, `src/App.svelte`를 수정해주세요.\r\n\r\n```html\r\n<script lang=\"ts\">\r\n  // 데이터 타입\r\n  interface dataType {\r\n    name: string;\r\n    author: string;\r\n    price: string;\r\n  }\r\n\r\n  // 데이터\r\n  let data: dataType[] = [{ name: \"📕 Book\", author: \"John\", price: \"5000\" }];\r\n</script>\r\n\r\n<p>데이터 : { JSON.stringify(data) }</p>\r\n```\r\n\r\n잘 작동합니다.\r\n\r\n![img](/static/images/img-learn-svelte-1.png)\r\n\r\nSvelte에서는 `{}`를 이용하여 안에 값을 넣을 수 있습니다.\r\n\r\n위 코드를 바닐라 JS로 다시 제작하여 비교해보겠습니다. (Typescript가 지원된다고 가정했을 때)\r\n\r\n```html\r\n<!--생략-->\r\n<body>\r\n  <p>데이터 : <span id=\"result\"></span></p>\r\n\r\n  <script lang=\"ts\">\r\n    // 데이터 타입\r\n    interface dataType {\r\n      name: string;\r\n      author: string;\r\n      price: string;\r\n    }\r\n\r\n    // 데이터\r\n    let data: dataType[] = [{ name: \"📕 Book\", author: \"John\", price: \"5000\" }];\r\n\r\n    // 값 집어넣기\r\n    document.getElementById(\"result\").innerHTML = JSON.stringify(data);\r\n  </script>\r\n</body>\r\n<!--생략-->\r\n```\r\n\r\n같은 결과지만 코드량이 매우 다릅니다. 이렇게 Svelte는 `{}`를 이용하여 안에 값을 넣을 수 있습니다.\r\n\r\n다음으로 data를 예쁘게 정리해서 결과를 출력하는 것을 구현해보겠습니다.\r\n\r\n```html\r\n<script lang=\"ts\">\r\n  // 데이터 타입\r\n  interface dataType {\r\n    name: string;\r\n    author: string;\r\n    price: string;\r\n  }\r\n\r\n  // 데이터\r\n  let data: dataType[] = [{ name: \"📕 Book\", author: \"John\", price: \"5000\" }];\r\n</script>\r\n\r\n{#each data as d}\r\n<div>\r\n  <h3>{d.name}</h3>\r\n  By {d.author}, {d.price}원\r\n</div>\r\n{/each}\r\n```\r\n\r\n![img](/static/images/img-learn-svelte-2.png)\r\n\r\n`each`는 JS에 `forEach`와 비슷한 문법입니다.  \r\n이번에는 `React`와 비교해보겠습니다.\r\n\r\n```tsx\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\n\r\n// 데이터 타입\r\ninterface dataType {\r\n  name: string;\r\n  author: string;\r\n  price: string;\r\n}\r\n\r\n// 데이터\r\nlet data: dataType[] = [{ name: \"📕 Book\", author: \"John\", price: \"5000\" }];\r\n\r\ndata.map((d) => (\r\n  <>\r\n    <div>\r\n      <div>\r\n        <h3>{d.name}</h3>\r\n        By {d.author}, {d.price}원\r\n      </div>\r\n    </div>\r\n  </>\r\n));\r\n\r\nReactDOM.render(<>{data}</>, document.getElementById(\"root\"));\r\n```\r\n\r\n역시 이번에도 Svelte쪽이 더 간단했습니다.\r\n\r\n## ✨ 스타일 적용하기\r\n\r\n이제 나름 페이지처럼 꾸며보도록 합시다.\r\n\r\n그리고 데이터가 한 개만 있으면 허전하니 데이터도 늘려봅시다.\r\n\r\n```svelte\r\n<script lang=\"ts\">\r\n  // 데이터 타입\r\n  interface dataType {\r\n    name: string;\r\n    author: string;\r\n    price: string;\r\n  }\r\n\r\n  // 데이터\r\n  let data: dataType[] = [\r\n    { name: \"📕 Book\", author: \"John\", price: \"5000\" },\r\n    { name: \"🚀 Rocket\", author: \"John2\", price: \"10000\" },\r\n    { name: \"🤖 Robot\", author: \"John3\", price: \"3000\" },\r\n  ];\r\n</script>\r\n\r\n<div class=\"container\">\r\n  {#each data as d}\r\n    <div class=\"card\">\r\n      <h3>{d.name}</h3>\r\n      By {d.author}, {d.price}원\r\n    </div>\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  .container {\r\n    display: flex;\r\n  }\r\n  .card {\r\n    margin: 25px 7px;\r\n    padding: 5px 15px;\r\n    width: 225px;\r\n    height: 350px;\r\n    border: solid 1px #dbdbdb;\r\n    border-radius: 5px;\r\n  }\r\n</style>\r\n\r\n```\r\n\r\n![img](/static/images/img-learn-svelte-3.png)\r\n\r\n원하는 결과가 나옵니다.\r\n\r\n## 🔧 마무리\r\n\r\n이번 포스트에서는 간단한 틀을 잡아보았습니다.  \r\n다음 시간에는 상품 자세히 보기 및 여러 기능을 구현해보도록 하겠습니다.\r\n"}]